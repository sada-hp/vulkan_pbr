#version 460
#include "lighting.glsl"
#include "cubemap_matrix.glsl"

layout(local_size_x = 8, local_size_y = 4, local_size_z = 1) in;

layout(binding = 0, rgba32f) uniform readonly imageCube inImage;
layout(binding = 1, rgba32f) uniform writeonly imageCube outImage;

void main()
{
    vec2 size = imageSize(outImage).xy;
    if (gl_GlobalInvocationID.x < size.x && gl_GlobalInvocationID.y < size.y)
    {
        ivec3 Texel = ivec3(2 * gl_GlobalInvocationID.xy, gl_GlobalInvocationID.z);
        
        vec4 Value = vec4(0.0);
        Value += imageLoad(inImage, Texel);
        Value += imageLoad(inImage, Texel + ivec3(1, 0, 0));
        Value += imageLoad(inImage, Texel + ivec3(0, 1, 0));
        Value += imageLoad(inImage, Texel + ivec3(1, 1, 0));
        Value /= 4;
        
        imageStore(outImage, ivec3(gl_GlobalInvocationID.xyz), Value);
    }
}