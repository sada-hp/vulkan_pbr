#version 460
#include "common.glsl"
layout(local_size_x = 8, local_size_y = 4, local_size_z = 1) in;

layout(binding = 0) uniform sampler2D HDRColor;
layout (binding = 1, rgba32f) uniform readonly image2D BlurH;
layout (binding = 2, rgba32f) uniform image2D BlurV;

void main()
{
    ivec2 Texel = ivec2(gl_GlobalInvocationID.xy);

    if (Texel.x < imageSize(BlurV).x && Texel.y < imageSize(BlurV).y)
    {
        float weight[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);

        vec3 Color = imageLoad(BlurH, Texel).rgb;

        for(int i = 1; i < 5; i++)
        {
            Color += imageLoad(BlurH, Texel + ivec2(0, i)).rgb * weight[i];
            Color += imageLoad(BlurH, Texel - ivec2(0, i)).rgb * weight[i];
        }
        
        imageStore(BlurV, Texel, vec4(Color, 1.0));
    }
}