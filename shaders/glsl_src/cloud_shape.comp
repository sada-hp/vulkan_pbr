#version 460
#include "noise.glsl"
#include "common.glsl"

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout (constant_id = 0) const uint frequency_worley = 4;
layout (constant_id = 1) const uint frequency_perlin = 4;
layout (constant_id = 2) const uint seed = 0;

layout (binding = 0, r8) uniform writeonly image3D outImage;

void main()
{
    NOISE_SEED = seed;

    const vec3 cell_loc = vec3(gl_GlobalInvocationID.xyz) / vec3(gl_NumWorkGroups.xyz);
    float worley01 = 1.0 - worley(cell_loc, frequency_worley * 2.0);
    float worley02 = 1.0 - worley(cell_loc, frequency_worley * 8.0);
    float worley03 = 1.0 - worley(cell_loc, frequency_worley * 12.0);
    
    float perlin = fbm_perlin(cell_loc, frequency_perlin, 3);
    float perlin_worley = remap(perlin, 0.0, 1.0, worley01 * 0.625 + worley02 * 0.25 + worley03 * 0.125, 1.0);

    worley01 = 1.0 - worley(cell_loc, frequency_worley);
    worley02 = 1.0 - worley(cell_loc, frequency_worley * 2.0);
    worley03 = 1.0 - worley(cell_loc, frequency_worley * 4.0);
    float worley04 = 1.0 - worley(cell_loc, frequency_worley * 8.0);
    float worley05 = 1.0 - worley(cell_loc, frequency_worley * 16.0);

    float fbm01 = worley01 * 0.625 + worley02 * 0.25 + worley03 * 0.125;
    float fbm02 = worley02 * 0.625 + worley03 * 0.25 + worley04 * 0.125;
    float fbm03 = worley03 * 0.625 + worley04 * 0.25 + worley05 * 0.125;
    float fbm04 = worley04 * 0.75 + worley05 * 0.25;

    float low_frequency_fbm = fbm02 * 0.625 + fbm03 * 0.25 + fbm04 * 0.125;
    float base = remap(perlin_worley, (1.0 - low_frequency_fbm), 1.0, 0.0, 1.0);

    imageStore(outImage, ivec3(gl_GlobalInvocationID.xyz), vec4(base, 0.0, 0.0, 0.0));
}