/*
*Based off the works of Eric Bruneton
*https://evasion.inrialpes.fr/~Eric.Bruneton/
*/

#version 460
#include "LUT.glsl"

layout (local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

layout (binding = 0, rgba32f) uniform image3D outImage;
layout (binding = 1) uniform sampler3D DeltaS;

void main()
{
    if (gl_GlobalInvocationID.z < imageSize(outImage).z && gl_GlobalInvocationID.x < imageSize(outImage).x && gl_GlobalInvocationID.y < imageSize(outImage).y)
    {
        float R, CosViewZenith, CosSunZenith, CosViewun;
        UVWToWorldInscatter(R, CosViewZenith, CosSunZenith, CosViewun);

        vec4 S = imageLoad(outImage, ivec3(gl_GlobalInvocationID.xyz));
        imageStore(outImage, ivec3(gl_GlobalInvocationID.xyz), S + vec4(texelFetch(DeltaS, ivec3(gl_GlobalInvocationID.xyz), 0).rgb / RayleighPhase(CosViewun), 0.0));
    }
}